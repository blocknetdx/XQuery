version: "3.9"

services:

  xq-engine-pegasys:
    build: xq-engine
    restart: unless-stopped
    volumes:
      - alembic-versions:/app/xq-engine/alembic/versions
    environment:
      DEX: PEGASYS
      API_URL: http://172.31.8.221:8545
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      DB_SCHEMA: "xgraph_psys"
      REDIS_HOST: ${REDIS_HOST}
      REDIS_DATABASE: 1
      XQ_NUM_WORKERS: ${XQ_NUM_WORKERS}
      NUM_SAFETY_BLOCKS: 5
      TARGET_SLEEP_TIME: 60
      ALEMBIC_SLEEP: 0
      HASURA_IP: 172.32.8.166
    stop_signal: SIGINT
    stop_grace_period: 10s
    depends_on:
      - xq-pg
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    networks:
      xqbackend:
        ipv4_address: 172.32.7.166
      exrproxy-env_backend:

  xq-engine-pangolin:
    build: xq-engine
    restart: unless-stopped
    volumes:
      - alembic-versions:/app/xq-engine/alembic/versions
    environment:
      DEX: PANGOLIN
      API_URL: http://194.163.143.68:9650/ext/bc/C/rpc
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      DB_SCHEMA: "xgraph_png"
      REDIS_HOST: ${REDIS_HOST}
      REDIS_DATABASE: 0
      XQ_NUM_WORKERS: ${XQ_NUM_WORKERS}
      NUM_SAFETY_BLOCKS: 10
      TARGET_SLEEP_TIME: 30
      ALEMBIC_SLEEP: 5
      HASURA_IP: 172.32.8.166
    stop_signal: SIGINT
    stop_grace_period: 10s
    depends_on:
      - xq-pg
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    networks:
      xqbackend:
        ipv4_address: 172.32.6.166

  # hasura
  xq-graphql:
    image: hasura/graphql-engine:v2.15.0
    restart: unless-stopped
    tty: true
    ports:
      - "8080:8080"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${DB_USERNAME}:${DB_PASSWORD}@172.32.8.167:5432/${DB_DATABASE}
      HASURA_GRAPHQL_STRINGIFY_NUMERIC_TYPES: "true"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
    stop_signal: SIGINT
    stop_grace_period: 10s
    depends_on:
      - xq-pg
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    networks:
      xqbackend:
        ipv4_address: 172.32.8.166

  # postgres
  xq-pg:
    image: postgres:15.0
    shm_size: 1g
    restart: unless-stopped
    volumes:
      - /xq2:/var/lib/postgresql/data
    tty: true
#    ports:
#      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE}
    stop_signal: SIGINT
    stop_grace_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    networks:
      xqbackend:
        ipv4_address: 172.32.8.167

  # redis
  xq-redis:
    image: redis:7.0
    restart: unless-stopped
    tty: true
#    ports:
#      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass "${REDIS_PASSWORD}"
    stop_signal: SIGINT
    stop_grace_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    networks:
      xqbackend:
        ipv4_address: 172.32.8.168

  xq-reverse-proxy:
    build: xq-reverse-proxy
    restart: always
    environment:
      PORT: 81
      ENDPOINT: /indexer
      HASURA_IP: 172.32.8.166
      HASURA_PORT: 8080
    depends_on:
      - xq-graphql
      - xq-pg
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "10"
    networks:
      xqbackend:
        ipv4_address: 172.32.8.169

networks:
  xqbackend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.32.0.0/20
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
  exrproxy-env_backend:
    name: exrproxy-env_backend
    external: true
    
volumes:
  alembic-versions:
